documentEngineLicense:
  activationKey: ${activation_key}

apiAuth:
  apiToken: secret
  # externalSecret: 
  #   name: ""
  # API_AUTH_TOKEN can be used isntead of JWT
  jwt:
    enabled: false
    publicKey: "${jwt_public_key}"
    # Supported algorithms: RS256, RS512, ES256, ES512. See RFC 7518 for details about specific algorithms.
    algorithm: RS256

dashboard:
  enabled: true
  auth:
    username: admin
    password: admin
  # externalSecret:
  #   name: ""

observability:
  log:
    level: ${log_level}

documentSigningService:
  enabled: false
# url: {{ .Values.signingService.url }}
# timeoutSeconds: {{ .Values.signingService.timeoutSeconds }}
# defaultSignerName: {{ .Values.signingService.defaultSignerName }}
# defaultSignatureReason: {{ .Values.signingService.defaultSignatureReason }}
# defaultSignatureLocation: {{ .Values.signingService.defaultSignatureLocation }}
# digitalSignatureHashAlgorithm: {{ .Values.signingService.digitalSignatureHashAlgorithm }}
# digitalSignatureCertificateCheckTime: {{ .Values.signingService.digitalSignatureCertificateCheckTime }}

config:
  trustedProxies: default

assetStorage:
  backendType: built-in
  backendFallback:
    enabled: false

database: 
  enabled: true
  engine: postgres
  connections: 20
  postgres: 
    host: ${db_host}
    port: 5432
    database: ${db_name}
    username: pspdfkit
    password: pspdfkit
    adminUsername: pspdfkit
    adminPassword: pspdfkit
    tls: 
      enabled: false
      verify: false
  migrationJob: 
    enabled: false

service: 
  port: 80

resources: 
  limits: 
    cpu: "4"
    memory: 8Gi
  requests: 
    cpu: "1"
    memory: 1Gi

ingress:
  enabled: true
  className: nginx
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "180"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "180"
    nginx.ingress.kubernetes.io/large-client-header-buffers: "4 16k"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "128k"
  hosts:
    - host: ${hostname}
      paths:
        - path: /
          pathType: Prefix

updateStrategy:
  type: RollingUpdate
  rollingUpdate:
    maxUnavailable: 0
    maxSurge: 1

podLabels: 
  pspdfkit-document-engine: example-for-eks

podAnnotations:
  checksum/values-template: ${checksum_values}
  checksum/code: ${checksum_code}

topologySpreadConstraints:
  - labelSelector:
      matchLabels:
        app.kubernetes.io/name: ${release_name}
        pspdfkit-document-engine: example-for-eks
    topologyKey: topology.kubernetes.io/zone
    maxSkew: 1
    whenUnsatisfiable: ScheduleAnyway
    matchLabelKeys:
      - pod-template-hash

prometheusExport: 
  enabled: true

postgresql:
  enabled: true
  architecture: standalone
  auth:
    postgresPassword: ${db_postgres_password}
    username: pspdfkit
    password: pspdfkit
    database: ${db_name}
  primary:
    persistence:
      enabled: true
      size: 512Mi
      storageClass: standard
      accessModes:
        - ReadWriteOnce
  volumePermissions:
    enabled: true
  tls: 
    enabled: false

# postgresql:
#   enabled: true
#   architecture: standalone
#   auth:
#     postgresPassword: ${db_postgres_password}
#     username: pspdfkit
#     password: pspdfkit
#     database: ${db_name}
#   tls:
#     enabled: false

redis: 
  enabled: false